version: 1.0.{build}
branches:
  only:
  - development    # build the default branch
  - /^release-.+/  # build release branches
  - /^Mudlet-.+/   # build release tags (yes, the option also applies to tags)

# Without a prefix commands are batch file ones
# With cmd: prefix they are run by cmd.exe
# With ps: prefix they are run by PowerShell
init:
- cmd: mkdir C:\src\

image: Visual Studio 2019

environment:
  signing_password:
    secure: gOKqBtIvfDuGkEeaHGaguMmafynYAG06iVuD6Krem7M=
  DEPLOY_KEY_PASS:
    secure: 81sr0SJzuWG+mgH3X6fJTh4rfX5/O1qa3MsItNvFukQ=
  DEPLOY_PATH:
    secure: XQhASAJJm4Owpu74K4jgL0gszN59XJnCAS27NG7CW5G1LSRSWRh/EhKiTD36DvSr
  DBLSQD_USER:
    secure: MzfNcBLZRfswzBQufoW4EV+9/tcG5vW+G6EVTyN6Glc=
  DBLSQD_PASS:
    secure: Bm5PLJjC39XmRC55RPGVP9c5CFxvWu2VorAAmu5QS38=
  matrix:
# was QT_BASE_DIR: C:\Qt\5.12.10\mingw73_32 and MINGW_BASE_DIR: C:\Qt\Tools\mingw730_32 for old system and no BUILD_BITNESS
# We are not currently using CMake for Windows builds but it might be needed in
# the future - and we now need Q_OR_C_MAKE so as to pull the version number from
# the right project file:
  - BUILD_BITNESS: 64
    Q_OR_C_MAKE: qmake
  - BUILD_BITNESS: 32
    Q_OR_C_MAKE: qmake

install:
#- cd "%APPVEYOR_BUILD_FOLDER%\CI"
#- powershell ".\appveyor.install.ps1"
- C:\msys64\usr\bin\sh.exe -c C:\\projects\\mudlet\\CI\\appveyor.install.sh

build_script:
#- cd "%APPVEYOR_BUILD_FOLDER%\CI"
#- powershell ".\appveyor.build.ps1"
- C:\msys64\usr\bin\sh.exe -c C:\\projects\\mudlet\\CI\\appveyor.build.sh
#on_failure:
#- cd C:\src
#- bash -l -c "curl --upload-file ./verbose_output.log https://transfer.sh/verbose_output.log"

# on successful build we may need to use the after_build stage in order to have
# the produced files be made available as a "artifact" - at present it makes
# sure that all the needed files are in the C:\\projects\\mudlet\\package dir:
after_build:
- C:\msys64\usr\bin\sh.exe -c C:\\projects\\mudlet\\CI\\appveyor.after_build.sh

on_success:
- C:\msys64\usr\bin\sh.exe -c C:\\projects\\mudlet\\CI\\appveyor.after_success.sh

#on_failure:
#- cd C:\src
#- powershell "Push-AppveyorArtifact ./verbose_output.log"
#- echo "Build failed - see verbose_output.log artifact upload for more information."

cache:
#  - '%MINGW_BASE_DIR% -> CI\appveyor.install.ps1, CI\appveyor.functions.ps1'
- C:\msys64\var\cache\pacman\pkg

notifications:
- provider: Webhook
  url: https://webhooks.gitter.im/e/2d6f7bea328a9dd60769
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: true
  body: >-
    {
      "message": "Appveyor {{repositoryName}}{{#isPullRequest}}#{{pullRequestId}}{{/isPullRequest}}{{^isPullRequest}} ({{branch}}){{/isPullRequest}} {{#passed}}passed{{/passed}}{{#failed}}failed{{/failed}} ({{buildNumber}})",
      "level": "{{#passed}}info{{/passed}}{{#failed}}error{{/failed}}"
    }
