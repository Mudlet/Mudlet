development:

|               ns/op |                op/s |    err% |     total | benchmark
|--------------------:|--------------------:|--------:|----------:|:----------
|           34533.20 |           28957.64 |    2.9% |      0.21 | `for (auto trigger : mTriggerRootNodeList)`
|           29513.20 |           33883.14 |    0.8% |      0.18 | `for (auto trigger : mTriggerRootNodeList)`
|           27143.69 |           36840.97 |    0.9% |      0.17 | `for (auto trigger : mTriggerRootNodeList)`
|           34008.59 |           29404.34 |    1.3% |      0.22 | `for (auto trigger : mTriggerRootNodeList)`
|           39425.43 |           25364.34 |    2.1% |      0.24 | `for (auto trigger : mTriggerRootNodeList)`
|           33418.30 |           29923.72 |    1.1% |      0.20 | `for (auto trigger : mTriggerRootNodeList)`
|           26994.96 |           37043.96 |    0.2% |      0.16 | `for (auto trigger : mTriggerRootNodeList)`
|           32937.75 |           30360.30 |    0.7% |      0.20 | `for (auto trigger : mTriggerRootNodeList)`
|           35571.17 |           28112.66 |    1.9% |      0.22 | `for (auto trigger : mTriggerRootNodeList)`
|           27077.98 |           36930.37 |    0.4% |      0.16 | `for (auto trigger : mTriggerRootNodeList)`
|           33646.06 |           29721.16 |    0.6% |      0.20 | `for (auto trigger : mTriggerRootNodeList)`
|           27547.99 |           36300.28 |    0.8% |      0.16 | `for (auto trigger : mTriggerRootNodeList)`
|           34581.43 |           28917.26 |    1.3% |      0.21 | `for (auto trigger : mTriggerRootNodeList)`
|           35784.87 |           27944.77 |    0.8% |      0.21 | `for (auto trigger : mTriggerRootNodeList)`
|           35273.33 |           28350.03 |    1.0% |      0.22 | `for (auto trigger : mTriggerRootNodeList)`
|           27839.51 |           35920.17 |    3.3% |      0.17 | `for (auto trigger : mTriggerRootNodeList)`
|           32711.21 |           30570.56 |    0.7% |      0.20 | `for (auto trigger : mTriggerRootNodeList)`
|           34096.45 |           29328.57 |    2.5% |      0.21 | `for (auto trigger : mTriggerRootNodeList)`
|           31848.11 |           31399.04 |    0.2% |      0.19 | `for (auto trigger : mTriggerRootNodeList)`
|           28056.40 |           35642.49 |    4.4% |      0.19 | `for (auto trigger : mTriggerRootNodeList)`
|           32658.95 |           30619.48 |    1.1% |      0.20 | `for (auto trigger : mTriggerRootNodeList)`
= 31,502


|               ns/op |                op/s |    err% |     total | benchmark
|--------------------:|--------------------:|--------:|----------:|:----------
|           33741.04 |           29637.50 |    0.3% |      0.41 | `for (auto trigger : mTriggerRootNodeList)`
|           29456.53 |           33948.33 |    0.5% |      0.37 | `for (auto trigger : mTriggerRootNodeList)`
|           27050.11 |           36968.42 |    0.3% |      0.32 | `for (auto trigger : mTriggerRootNodeList)`
|           33812.99 |           29574.43 |    0.2% |      0.41 | `for (auto trigger : mTriggerRootNodeList)`
|           27030.16 |           36995.71 |    0.4% |      0.33 | `for (auto trigger : mTriggerRootNodeList)`
|           33402.08 |           29938.25 |    0.5% |      0.40 | `for (auto trigger : mTriggerRootNodeList)`
|           27135.99 |           36851.43 |    0.4% |      0.33 | `for (auto trigger : mTriggerRootNodeList)`
|           33347.30 |           29987.44 |    1.1% |      0.41 | `for (auto trigger : mTriggerRootNodeList)`
|           34959.45 |           28604.57 |    0.5% |      0.43 | `for (auto trigger : mTriggerRootNodeList)`
|           27204.44 |           36758.71 |    0.5% |      0.33 | `for (auto trigger : mTriggerRootNodeList)`
|           34355.41 |           29107.49 |    1.8% |      0.44 | `for (auto trigger : mTriggerRootNodeList)`
|           27461.15 |           36415.08 |    1.5% |      0.34 | `for (auto trigger : mTriggerRootNodeList)`
|           34291.27 |           29161.94 |    1.1% |      0.43 | `for (auto trigger : mTriggerRootNodeList)`
|           35616.06 |           28077.22 |    0.8% |      0.43 | `for (auto trigger : mTriggerRootNodeList)`
|           35262.47 |           28358.76 |    0.5% |      0.42 | `for (auto trigger : mTriggerRootNodeList)`
|           27100.17 |           36900.14 |    0.5% |      0.33 | `for (auto trigger : mTriggerRootNodeList)`
|           34841.02 |           28701.80 |    4.5% |      0.44 | `for (auto trigger : mTriggerRootNodeList)`
|           32167.13 |           31087.63 |    0.5% |      0.38 | `for (auto trigger : mTriggerRootNodeList)`
|           27128.34 |           36861.82 |    0.4% |      0.32 | `for (auto trigger : mTriggerRootNodeList)`
|           32253.88 |           31004.03 |    0.1% |      0.39 | `for (auto trigger : mTriggerRootNodeList)`
= 32,247

with initial triggers version:

|               ns/op |                op/s |    err% |     total | benchmark
|--------------------:|--------------------:|--------:|----------:|:----------
|          176,573.12 |            5,663.38 |    2.7% |      4.26 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          166,990.19 |            5,988.38 |    2.0% |      4.03 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          164,661.66 |            6,073.06 |    1.3% |      4.18 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          183,376.56 |            5,453.26 |    1.3% |      4.41 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          171,266.62 |            5,838.85 |    2.0% |      4.17 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          181,336.99 |            5,514.59 |    1.0% |      4.38 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          170,092.36 |            5,879.16 |    0.4% |      4.12 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          182,694.00 |            5,473.63 |    1.5% |      4.38 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          184,313.41 |            5,425.54 |    1.2% |      4.50 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          171,898.78 |            5,817.38 |    0.9% |      4.11 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          184,250.28 |            5,427.40 |    1.2% |      4.42 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          168,486.01 |            5,935.21 |    1.1% |      4.12 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          183,323.66 |            5,454.83 |    0.7% |      4.38 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          188,441.81 |            5,306.68 |    2.4% |      4.55 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          186,286.47 |            5,368.08 |    0.5% |      4.46 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          168,972.13 |            5,918.14 |    1.1% |      4.05 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          181,865.87 |            5,498.56 |    0.7% |      4.41 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          182,165.32 |            5,489.52 |    1.1% |      4.38 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          183,119.49 |            5,460.92 |    2.1% |      4.43 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          170,919.92 |            5,850.69 |    0.6% |      4.10 | `prematch + for (auto trigger : mTriggerRootNodeList)`
|          178,279.17 |            5,609.18 |    1.1% |      4.28 | `prematch + for (auto trigger : mTriggerRootNodeList)`


with 50 elements to match:
|        ns/operation |        operations/s |    err% |     total | benchmark
|--------------------:|--------------------:|--------:|----------:|:----------
|          121,625.40 |            8,221.97 |    4.6% |      2.88 | `QtConcurrent filtered.results()`
|            9,440.33 |          105,928.52 |    1.6% |      0.26 | `plain for loop`
|          114,873.41 |            8,705.23 |    1.0% |      2.74 | `QtConcurrent filtered.results()`
|            7,269.21 |          137,566.61 |    0.8% |      0.18 | `plain for loop`
|          124,252.79 |            8,048.11 |    1.7% |      2.96 | `QtConcurrent filtered.results()`
|            6,458.92 |          154,824.65 |    0.5% |      0.16 | `plain for loop`

with 50000 elements to match:
|          941,071.22 |            1,062.62 |    3.8% |     22.53 | `QtConcurrent filtered.results()`
|          807,301.68 |            1,238.69 |    0.6% |     19.35 | `plain for loop`
|          906,896.80 |            1,102.66 |    1.0% |     21.76 | `QtConcurrent filtered.results()`
|          784,278.21 |            1,275.06 |    0.9% |     18.82 | `plain for loop`
|          887,782.39 |            1,126.40 |    0.8% |     21.21 | `QtConcurrent filtered.results()`
|          775,139.00 |            1,290.09 |    0.4% |     18.53 | `plain for loop`
