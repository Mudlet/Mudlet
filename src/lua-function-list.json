{
    "addAreaName": "areaID = addAreaName(areaName)",
    "addCmdLineSuggestion": "addCmdLineSuggestion([name], suggestion)",
    "addCustomLine": "addCustomLine(roomID, id_to, direction, style, color, arrow)",
    "addFileWatch": "addFileWatch(path)",
    "addMapEvent": "addMapEvent(uniquename, event name, parent, display name, arguments)",
    "addMapMenu": "addMapMenu(uniquename, parent, display name)",
    "addRoom": "addRoom(roomID)",
    "addSpecialExit": "addSpecialExit(roomIDFrom, roomIDTo, moveCommand)",
    "addSupportedTelnetOption": "addSupportedTelnetOption(option)",
    "addWordToDictionary": "Parameters",
    "adjustStopWatch": "adjustStopWatch(watchID/watchName, amount)",
    "alert": "alert([seconds])",
    "ansi2decho": "Parameters",
    "ansi2string": "Parameters",
    "appendBuffer": "Parameters",
    "appendCmdLine": "appendCmdLine([name], text)",
    "appendScript": "appendScript(scriptName, luaCode, [occurrence])",
    "auditAreas": "auditAreas()",
    "bg": "Parameters",
    "calcFontSize": "Parameters",
    "cecho": "Parameters",
    "cechoLink": "Parameters",
    "cechoPopup": "Parameters",
    "centerview": "centerview (roomID)",
    "cfeedTriggers": "cfeedTriggers(text)",
    "cinsertLink": "Parameters",
    "cinsertPopup": "Parameters",
    "cinsertText": "Parameters",
    "clearAreaUserData": "clearAreaUserData(areaID)",
    "clearAreaUserDataItem": "clearAreaUserDataItem(areaID, key)",
    "clearCmdLine": "clearCmdLine([name])",
    "clearCmdLineSuggestions": "clearCmdLineSuggestions([name])",
    "clearMapUserData": "clearMapUserData()",
    "clearMapUserDataItem": "clearUserDataItem(mapID, key)",
    "clearRoomUserData": "clearRoomUserData(roomID)",
    "clearRoomUserDataItem": "clearRoomUserDataItem(roomID, key)",
    "clearSpecialExits": "clearSpecialExits(roomID)",
    "clearUserWindow": "clearWindow([windowName])",
    "closeMapWidget": "closeMapWidget()",
    "closeMudlet": "closeMudlet()",
    "connectExitStub": "connectExitStub(fromID, direction) or connectExitStub(fromID, toID, [direction])",
    "connectToServer": "Parameters",
    "copy": "Parameters",
    "copy2decho": "Parameters",
    "copy2html": "Parameters",
    "createBuffer": "Parameters",
    "createCommandLine": "Parameters",
    "createGauge": "Parameters",
    "createLabel": "Parameters",
    "createMapImageLabel": "labelID = createMapImageLabel(areaID, filePath, posx, posy, posz, width, height, zoom, showOnTop)",
    "createMapLabel": "labelID = createMapLabel(areaID, text, posX, posY, posZ, fgRed, fgGreen, fgBlue, bgRed, bgGreen, bgBlue, zoom, fontSize, showOnTop, noScaling)",
    "createMapper": "createMapper([name of userwindow], x, y, width, height)",
    "createMiniConsole": "Parameters",
    "createRoomID": "usableId = createRoomID([minimumStartingRoomId])",
    "createStopWatch": "createStopWatch([name], [start immediately])",
    "creplaceLine": "Parameters",
    "debugc": "debugc(content)",
    "decho": "Parameters",
    "dechoLink": "Parameters",
    "dechoPopup": "Parameters",
    "deleteArea": "deleteArea(areaID or areaName)",
    "deleteHTTP": "Parameters",
    "deleteLabel": "deleteLine([windowName])",
    "deleteMapLabel": "deleteMapLabel(areaID, labelID)",
    "deleteRoom": "deleteRoom(roomID)",
    "deleteStopWatch": "deleteStopWatch(watchID/watchName)",
    "denyCurrentSend": "denyCurrentSend()",
    "deselect": "Parameters",
    "dfeedTriggers": "dfeedTriggers(str)",
    "dinsertLink": "Parameters",
    "dinsertPopup": "Parameters",
    "disableAlias": "disableAlias(name)",
    "disableClickthrough": "Parameters",
    "disableHorizontalScrollBar": "Parameters",
    "disableKey": "disableKey(name)",
    "disableMapInfo": "disableMapInfo(label)",
    "disableModuleSync": "disableModuleSync(name)",
    "disableScript": "disableScript(name)",
    "disableTimer": "disableTimer(name)",
    "disableTrigger": "disableTrigger(name)",
    "disconnect": "downloadFile(saveto, url)",
    "display": "display(content)",
    "dreplace": "Parameters",
    "dreplaceLine": "Parameters",
    "echo": "echo([miniconsoleName or labelName], text)",
    "echoLink": "Parameters",
    "echoUserWindow": "echoPopup([windowName], text, {commands}, {hints}, [useCurrentFormatElseDefault])",
    "enableAlias": "enableAlias(name)",
    "enableClickthrough": "Parameters",
    "enableHorizontalScrollBar": "Parameters",
    "enableKey": "enableKey(name)",
    "enableMapInfo": "enableMapInfo(label)",
    "enableModuleSync": "enableModuleSync(name)",
    "enableScript": "enableScript(name)",
    "enableTimer": "enableTimer(name)",
    "enableTrigger": "enableTrigger(name)",
    "exists": "exists(name, type)",
    "expandAlias": "expandAlias(command, [echoBackToBuffer])",
    "f": "Parameters",
    "feedTriggers": "feedTriggers(text[, dataIsUtf8Encoded = true])",
    "fg": "Parameters",
    "getAllAreaUserData": "dataTable = getAllAreaUserData(areaID)",
    "getAllMapUserData": "dataTable = getAllMapUserData()",
    "getAllRoomEntrances": "exitsTable = getAllRoomEntrances(roomID)",
    "getAllRoomUserData": "dataTable = getAllRoomUserData(roomID)",
    "getAreaExits": "roomTable = getAreaExits(areaID, showExits)",
    "getAreaRooms": "getAreaRooms(area id)",
    "getAreaTable": "areaTable = getAreaTable()",
    "getAreaTableSwap": "areaTable = getAreaTableSwap()",
    "getAreaUserData": "dataValue = getAreaUserData(areaID, key)",
    "getAvailableFonts": "Example",
    "getBgColor": "Parameters",
    "getBorderBottom": "Example",
    "getBorderLeft": "Example",
    "getBorderRight": "Example",
    "getBorderSizes": "Example",
    "getBorderTop": "Example",
    "getButtonState": "getButtonState()",
    "getClipboardText": "Example",
    "getCmdLine": "getCmdLine([name])",
    "getColorWildcard": "Parameters",
    "getColumnCount": "Parameters",
    "getColumnNumber": "Parameters",
    "getCommandSeparator": "getCommandSeparator()",
    "getConnectionInfo": "Example",
    "getCurrentLine": "Parameters",
    "getCustomEnvColorTable": "envcolors = getCustomEnvColorTable()",
    "getCustomLines": "lineTable = getCustomLines(roomID)",
    "getDictionaryWordList": "Example",
    "getDiscordDetail": "&lt;translate&gt; Example&lt;/translate&gt;",
    "getDiscordLargeIcon": "&lt;translate&gt; Example&lt;/translate&gt;",
    "getDiscordLargeIconText": "&lt;translate&gt; Example&lt;/translate&gt;",
    "getDiscordParty": "&lt;translate&gt; Example&lt;/translate&gt;",
    "getDiscordSmallIcon": "&lt;translate&gt; Example&lt;/translate&gt;",
    "getDiscordSmallIconText": "&lt;translate&gt; Example&lt;/translate&gt;",
    "getDiscordState": "&lt;translate&gt; Example&lt;/translate&gt;",
    "getDiscordTimeStamps": "&lt;translate&gt; Example&lt;/translate&gt;",
    "getDoors": "doors = getDoors(roomID)",
    "getEpoch": "seconds = getEpoch()",
    "getExitStubs": "stubs = getExitStubs(roomid)",
    "getExitStubs1": "stubs = getExitStubs1(roomid)",
    "getExitWeights": "weights = getExitWeights(roomid)",
    "getFgColor": "Parameters",
    "getFont": "Parameters",
    "getFontSize": "Parameters",
    "getGridMode": "TrueOrFalse = getGridMode(areaID)",
    "getHTTP": "Parameters",
    "getImageSize": "Parameters",
    "getIrcChannels": "Example",
    "getIrcConnectedHost": "Example",
    "getIrcNick": "Example",
    "getIrcServer": "Example",
    "getLastLineNumber": "Parameters",
    "getLineCount": "Parameters",
    "getLineNumber": "Parameters",
    "getLines": "Parameters",
    "getMainConsoleWidth": "Parameters",
    "getMainWindowSize": "Parameters",
    "getMapEvents": "mapevents = getMapEvents()",
    "getMapLabel": "labelinfo = getMapLabel(areaID, labelID or labelText)",
    "getMapLabels": "arealabels = getMapLabels(areaID)",
    "getMapMenus": "getMapMenus()",
    "getMapSelection": "getMapSelection()",
    "getMapUserData": "getMapUserData( key )",
    "getModuleInfo": "getModuleInfo(moduleName, [info])",
    "getModulePath": "path = getModulePath(module name)",
    "getModulePriority": "priority = getModulePriority(module name)",
    "getModules": "getModules()",
    "getModuleSync": "getModuleSync(name)",
    "getMousePosition": "Parameters",
    "getMudletHomeDir": "getMudletHomeDir()",
    "getMudletInfo": "getMudletInfo()",
    "getMudletVersion": "getMudletVersion(style)",
    "getNetworkLatency": "Example",
    "getOS": "getOS()",
    "getPackageInfo": "getPackageInfo(packageName, [info])",
    "getPackages": "getPackages()",
    "getPath": "getPath(roomID from, roomID to)",
    "getPlayerRoom": "getPlayerRoom()",
    "getProfileName": "getProfileName()",
    "getProfileTabNumber": "Parameters",
    "getRoomArea": "getRoomArea(roomID)",
    "getRoomAreaName": "getRoomAreaName(areaID or areaName)",
    "getRoomChar": "getRoomChar(roomID)",
    "getRoomCoordinates": "x,y,z = getRoomCoordinates(roomID)",
    "getRoomEnv": "envID = getRoomEnv(roomID)",
    "getRoomExits": "getRoomExits (roomID)",
    "getRoomHashByID": "getRoomHashByID(roomID)",
    "getRoomIDbyHash": "roomID = getRoomIDbyHash(hash)",
    "getRoomName": "getRoomName(roomID)",
    "getRooms": "rooms = getRooms()",
    "getRoomsByPosition": "roomTable = getRoomsByPosition(areaID, x,y,z)",
    "getRoomUserData": "getRoomUserData(roomID, key)",
    "getRoomUserDataKeys": "getRoomUserDataKeys(roomID)",
    "getRoomWeight": "getRoomWeight(roomID)",
    "getRowCount": "Parameters",
    "getScript": "getScript(scriptName, [occurrence])",
    "getSelection": "Parameters",
    "getServerEncoding": "getServerEncoding()",
    "getServerEncodingsList": "getServerEncodingsList()",
    "getSpecialExits": "exits = getSpecialExits(roomID[, listAllExits])",
    "getSpecialExitsSwap": "getSpecialExitsSwap(roomID)",
    "getStopWatchBrokenDownTime": "brokenDownTimeTable = getStopWatchBrokenDownTime(watchID or watchName)",
    "getStopWatches": "table = getStopWatches()",
    "getStopWatchTime": "time = getStopWatchTime(watchID [or watchName from Mudlet 4.4.0])",
    "getTextFormat": "Parameters",
    "getTime": "time = getTime([return as string, [custom time format]])",
    "getTimestamp": "time = getTimestamp([console_name], lineNumber)",
    "getUserWindowSize": "Parameters",
    "getWindowsCodepage": "getWindowsCodepage()",
    "getWindowWrap": "Parameters",
    "gotoRoom": "gotoRoom (roomID)",
    "handleWindowResizeEvent": "Parameters",
    "hasExitLock": "status = hasExitLock(roomID, direction)",
    "hasFocus": "Parameters",
    "hasSpecialExitLock": "hasSpecialExitLock(from roomID, to roomID, moveCommand)",
    "hecho": "Parameters",
    "hechoLink": "Parameters",
    "hechoPopup": "Parameters",
    "hfeedTriggers": "hfeedTriggers(str)",
    "hideGauge": "Parameters",
    "hideToolBar": "Parameters",
    "hideWindow": "Parameters",
    "highlightRoom": "highlightRoom( roomID, color1Red, color1Green, color1Blue, color2Red, color2Green, color2Blue, highlightRadius, color1Alpha, color2Alpha)",
    "hinsertLink": "Parameters",
    "hinsertPopup": "Parameters",
    "hreplace": "Parameters",
    "hreplaceLine": "Parameters",
    "insertLink": "Parameters",
    "insertPopup": "Parameters",
    "insertText": "Parameters",
    "installModule": "installModule(location)",
    "installPackage": "installPackage(location or url)",
    "invokeFileDialog": "invokeFileDialog(fileOrFolder, dialogTitle)",
    "ioprint": "Parameters",
    "isActive": "isActive(name, type)",
    "isAnsiBgColor": "Parameters",
    "isAnsiFgColor": "Parameters",
    "isPrompt": "isPrompt()",
    "killAlias": "killAlias(aliasID)",
    "killAnonymousEventHandler": "killAnonymousEventHandler(handler id)",
    "killKey": "killKey(name)",
    "killMapInfo": "killMapInfo(label)",
    "killTimer": "killTimer(id)",
    "killTrigger": "killTrigger(id)",
    "loadJsonMap": "loadJsonMap(pathFileName)",
    "loadMap": "loadMap(file location)",
    "loadWindowLayout": "Example",
    "lockExit": "lockExit(roomID, direction, lockIfTrue)",
    "lockRoom": "lockRoom (roomID, lockIfTrue)",
    "lockSpecialExit": "lockSpecialExit (from roomID, to roomID, special exit command, lockIfTrue)",
    "lowerWindow": "Parameters",
    "moveCursor": "Parameters",
    "moveCursorDown": "Parameters",
    "moveCursorEnd": "Parameters",
    "moveCursorUp": "Parameters",
    "moveGauge": "Parameters",
    "moveMapWidget": "moveMapWidget(Xpos, Ypos)",
    "moveWindow": "Parameters",
    "mudletOlderThan": "mudletOlderThan(major, [minor], [patch])",
    "openMapWidget": "openMapWidget([dockingArea | Xpos, Ypos, width, height])",
    "openUrl": "Example",
    "openUserWindow": "Parameters",
    "openWebPage": "openWebPage(URL)",
    "paste": "Parameters",
    "permAlias": "permAlias(name, parent, regex, lua code)",
    "permBeginOfLineStringTrigger": "permBeginOfLineStringTrigger(name, parent, pattern table, lua code)",
    "permGroup": "permGroup(name, itemtype, [parent])",
    "permKey": "permKey(name, parent, [modifier], key code, lua code)",
    "permPromptTrigger": "permPromptTrigger(name, parent, lua code)",
    "permRegexTrigger": "permRegexTrigger(name, parent, pattern table, lua code)",
    "permScript": "permScript(name, parent, lua code)",
    "permSubstringTrigger": "permSubstringTrigger( name, parent, pattern table, lua code )",
    "permTimer": "permTimer(name, parent, seconds, lua code)",
    "playSoundFile": "playSoundFile(fileName, [volume])",
    "postHTTP": "Parameters",
    "print": "Parameters",
    "printCmdLine": "printCmdLine([name], text)",
    "purgeMediaCache": "Guidance",
    "putHTTP": "Parameters",
    "raiseEvent": "raiseEvent(event_name, arg-1, … arg-n)",
    "raiseGlobalEvent": "raiseGlobalEvent(event_name, arg-1, … arg-n)",
    "raiseWindow": "Parameters",
    "receiveMSP": "Example",
    "reconnect": "Example",
    "registerAnonymousEventHandler": "registerAnonymousEventHandler(event name, functionReference, [one shot])",
    "registerMapInfo": "registerMapInfo(label, function)",
    "reloadModule": "reloadModule(module name)",
    "remainingTime": "remainingTime(timer id number or name)",
    "removeCmdLineSuggestion": "removeCmdLineSuggestion([name], suggestion)",
    "removeCustomLine": "removeCustomLine(roomID, direction)",
    "removeFileWatch": "removeFileWatch(path)",
    "removeMapEvent": "removeMapEvent(event name)",
    "removeMapMenu": "removeMapMenu(menu name)",
    "removeSpecialExit": "removeSpecialExit(roomID, command)",
    "removeWordFromDictionary": "Parameters",
    "replace": "Parameters",
    "replaceAll": "Parameters",
    "replaceLine": "Parameters",
    "replaceWildcard": "Parameters",
    "resetCmdLineAction": "resetBackgroundImage([windowName])",
    "resetFormat": "Parameters",
    "resetLabelCursor": "Parameters",
    "resetLabelToolTip": "Parameters",
    "resetMapWindowTitle": "resetUserWindowTitle(windowName)",
    "resetProfile": "resetProfile()",
    "resetProfileIcon": "resetProfileIcon()",
    "resetRoomArea": "resetRoomArea (roomID)",
    "resetStopWatch": "resetStopWatch(watchID)",
    "resizeMapWidget": "resizeMapWidget(width, height)",
    "resizeWindow": "Parameters",
    "restartIrc": "sendAll(list of things to send, [echo back or not])",
    "roomExists": "roomExists(roomID)",
    "roomLocked": "locked = roomLocked(roomID)",
    "saveJsonMap": "saveJsonMap([pathFileName])",
    "saveMap": "saveMap([location], [version])",
    "saveProfile": "saveProfile(location)",
    "saveWindowLayout": "Example",
    "searchAreaUserData": "searchRoom (room number | room name[, case-sensitive [, exact-match]])",
    "searchRoomUserData": "searchRoomUserData(key, value)",
    "selectCaptureGroup": "Parameters",
    "selectCurrentLine": "Parameters",
    "selectSection": "Parameters",
    "selectString": "Parameters",
    "send": "send(command, showOnScreen)",
    "sendATCP": "Parameters",
    "sendGMCP": "Example",
    "sendIrc": "Parameters",
    "sendMSDP": "Parameters",
    "sendSocket": "sendSocket(data)",
    "sendTelnetChannel102": "Example",
    "setAppStyleSheet": "Parameters",
    "setAreaName": "setAreaName(areaID or areaName, newName)",
    "setAreaUserData": "setAreaUserData(areaID, key (as a string), value (as a string))",
    "setBackgroundColor": "Parameters",
    "setBackgroundImage": "Parameters (label)",
    "setBgColor": "Parameters",
    "setBold": "Example",
    "setBorderBottom": "Parameters",
    "setBorderColor": "Parameters",
    "setBorderLeft": "Parameters",
    "setBorderRight": "Parameters",
    "setBorderSizes": "Arguments",
    "setBorderTop": "Parameters",
    "setButtonStyleSheet": "Parameters",
    "setClipboardText": "Parameters",
    "setCmdLineAction": "Parameters",
    "setCmdLineStyleSheet": "Parameters",
    "setConsoleBufferSize": "setConsoleBufferSize([consoleName], linesLimit, sizeOfBatchDeletion)",
    "setCustomEnvColor": "setCustomEnvColor(environmentID, r,g,b,a)",
    "setDiscordApplicationID": "&lt;translate&gt; Parameters &lt;/translate&gt;",
    "setDiscordDetail": "&lt;translate&gt; Example&lt;/translate&gt;",
    "setDiscordElapsedStartTime": "&lt;translate&gt; Parameters &lt;/translate&gt;",
    "setDiscordGame": "&lt;translate&gt; Example&lt;/translate&gt;",
    "setDiscordLargeIcon": "&lt;translate&gt; Example&lt;/translate&gt;",
    "setDiscordLargeIconText": "&lt;translate&gt; Example&lt;/translate&gt;",
    "setDiscordParty": "&lt;translate&gt; Parameters &lt;/translate&gt;",
    "setDiscordRemainingEndTime": "&lt;translate&gt; Parameters &lt;/translate&gt;",
    "setDiscordSmallIcon": "&lt;translate&gt; Example&lt;/translate&gt;",
    "setDiscordSmallIconText": "&lt;translate&gt; Example&lt;/translate&gt;",
    "setDiscordState": "&lt;translate&gt; Example&lt;/translate&gt;",
    "setDoor": "setDoor(roomID, exitCommand, doorStatus)",
    "setExit": "setExit(from roomID, to roomID, direction)",
    "setExitStub": "setExitStub(roomID, direction, set/unset)",
    "setExitWeight": "setExitWeight(roomID, exitCommand, weight)",
    "setFgColor": "Example",
    "setFont": "Parameters",
    "setFontSize": "Parameters",
    "setGauge": "Example",
    "setGaugeStyleSheet": "Example",
    "setGaugeText": "Example",
    "setGridMode": "setGridMode(areaID, true/false)",
    "setHexBgColor": "Example",
    "setHexFgColor": "Example",
    "setIrcChannels": "Parameters",
    "setIrcNick": "Parameters",
    "setIrcServer": "Parameters",
    "setItalics": "setLabelToolTip(labelName, text, [duration])",
    "setLabelClickCallback": "Parameters",
    "setLabelCursor": "Parameters",
    "setLabelCustomCursor": "Parameters",
    "setLabelDoubleClickCallback": "Parameters",
    "setLabelOnEnter": "Parameters",
    "setLabelOnLeave": "Parameters",
    "setLabelReleaseCallback": "Parameters",
    "setLabelStyleSheet": "Parameters",
    "setLabelWheelCallback": "Parameters",
    "setLink": "Parameters",
    "setMainWindowSize": "Parameters",
    "setMapUserData": "setMapUserData(key (as a string), value (as a string))",
    "setMapWindowTitle": "Parameters",
    "setMapZoom": "setMapZoom(zoom)",
    "setMergeTables": "setMergeTables(module)",
    "setMiniConsoleFontSize": "setOverline([windowName], boolean)",
    "setModuleInfo": "setModuleInfo(moduleName, info, value)",
    "setModulePriority": "setModulePriority(moduleName, priority)",
    "setPackageInfo": "setPackageInfo(packageName, info, value)",
    "setPopup": "Parameters",
    "setProfileIcon": "setProfileIcon(iconPath)",
    "setProfileStyleSheet": "Parameters",
    "setReverse": "Example",
    "setRoomArea": "setRoomArea(roomID, newAreaID or newAreaName)",
    "setRoomChar": "setRoomChar(roomID, character)",
    "setRoomCharColor": "setRoomCharColor(roomId, r, g, b)",
    "setRoomCoordinates": "setRoomCoordinates(roomID, x, y, z)",
    "setRoomEnv": "setRoomEnv(roomID, newEnvID)",
    "setRoomIDbyHash": "setRoomIDbyHash(roomID, hash)",
    "setRoomName": "setRoomName(roomID, newName)",
    "setRoomUserData": "setRoomUserData(roomID, key (as a string), value (as a string))",
    "setRoomWeight": "setRoomWeight(roomID, weight)",
    "setScript": "setScript(scriptName, luaCode, [occurrence])",
    "setServerEncoding": "setServerEncoding(encoding)",
    "setStopWatchName": "setStopWatchName(watchID/currentStopWatchName, newStopWatchName)",
    "setStopWatchPersistence": "setStopWatchPersistence(watchID/watchName, state)",
    "setStrikeOut": "Example",
    "setTextFormat": "Parameters",
    "setTriggerStayOpen": "setTriggerStayOpen(name, number of lines)",
    "setUnderline": "setUserWindowTitle(windowName, text)",
    "setUserWindowStyleSheet": "Parameters",
    "setWindow": "Parameters",
    "setWindowWrap": "Parameters",
    "setWindowWrapIndent": "Parameters",
    "shms": "shms(seconds, bool)",
    "showCaptureGroups": "Example",
    "showGauge": "Parameters",
    "showMultimatches": "Example",
    "showNotification": "showNotification(title, [content], [expiryTimeInSeconds])",
    "showToolBar": "Parameters",
    "showWindow": "showColors([columns], [filterColor], [sort])",
    "spairs": "Parameters",
    "spawn": "spawn(readFunction, processToSpawn[, ...arguments])",
    "speedwalk": "speedwalk(dirString, backwards, delay, show)",
    "spellCheckWord": "Parameters",
    "spellSuggestWord": "Parameters",
    "startLogging": "startLogging(state)",
    "startStopWatch": "startStopWatch(watchName or watchID, [resetAndRestart])",
    "stopSounds": "stopSounds()",
    "stopStopWatch": "stopStopWatch(watchID or watchName)",
    "suffix": "Parameters",
    "tempAlias": "aliasID = tempAlias(regex, code to do)",
    "tempAnsiColorTrigger": "tempAnsiColorTrigger(foregroundColor[, backgroundColor], code[, expireAfter])",
    "tempBeginOfLineTrigger": "tempBeginOfLineTrigger(part of line, code, expireAfter)",
    "tempButton": "tempButton(toolbar name, button text, orientation)",
    "tempButtonToolbar": "tempButtonToolbar(name, location, orientation)",
    "tempColorTrigger": "tempColorTrigger(foregroundColor, backgroundColor, code, expireAfter)",
    "tempComplexRegexTrigger": "Parameters",
    "tempExactMatchTrigger": "Parameters",
    "tempKey": "Returns",
    "tempLineTrigger": "Parameters",
    "tempPromptTrigger": "Parameters",
    "tempRegexTrigger": "Parameters",
    "tempTimer": "Parameters",
    "tempTrigger": "Parameters",
    "timeframe": "timeframe(vname, true_time, nil_time, ...)",
    "translateTable": "translateTable(directions, [languagecode])",
    "ttsClearQueue": "Parameters",
    "ttsGetCurrentLine": "Example",
    "ttsGetCurrentVoice": "Example",
    "ttsGetPitch": "Example",
    "ttsGetQueue": "Parameters",
    "ttsGetRate": "Example",
    "ttsGetState": "Example",
    "ttsGetVoices": "Example",
    "ttsGetVolume": "Example",
    "ttsPause": "Example",
    "ttsQueue": "Parameters",
    "ttsResume": "Example",
    "ttsSetPitch": "Parameters",
    "ttsSetRate": "Parameters",
    "ttsSetVoiceByIndex": "Parameters",
    "ttsSetVoiceByName": "Parameters",
    "ttsSetVolume": "Parameters",
    "ttsSkip": "Example",
    "ttsSpeak": "Parameters",
    "unHighlightRoom": "unHighlightRoom(roomID)",
    "uninstallModule": "uninstallModule(name)",
    "uninstallPackage": "uninstallPackage(name)",
    "unsetRoomCharColor": "unsetRoomCharColor(roomId)",
    "unzipAsync": "unzipAsync(path, location)",
    "updateMap": "updateMap()",
    "usingMudletsDiscordID": "&lt;translate&gt; Example&lt;/translate&gt;"
}
