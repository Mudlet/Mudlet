import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable QtScxml 5.14'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "QScxmlEventConnection"
        prototype: "QObject"
        exports: ["QtScxml/EventConnection 5.8"]
        exportMetaObjectRevisions: [0]
        Property { name: "events"; type: "QStringList" }
        Property { name: "stateMachine"; type: "QScxmlStateMachine"; isPointer: true }
        Signal {
            name: "occurred"
            Parameter { name: "event"; type: "QScxmlEvent" }
        }
    }
    Component {
        name: "QScxmlInvokedServices"
        defaultProperty: "qmlChildren"
        prototype: "QObject"
        exports: ["QtScxml/InvokedServices 5.8"]
        exportMetaObjectRevisions: [0]
        Property { name: "stateMachine"; type: "QScxmlStateMachine"; isPointer: true }
        Property { name: "children"; type: "QVariantMap"; isReadonly: true }
        Property { name: "qmlChildren"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        name: "QScxmlStateMachine"
        defaultProperty: "children"
        prototype: "QObject"
        exports: ["QtScxml/StateMachine 5.8"]
        isCreatable: false
        exportMetaObjectRevisions: [508]
        Property { name: "running"; type: "bool" }
        Property { name: "initialized"; type: "bool"; isReadonly: true }
        Property { name: "dataModel"; type: "QScxmlDataModel"; isPointer: true }
        Property { name: "initialValues"; type: "QVariantMap" }
        Property { name: "invokedServices"; type: "QVector<QScxmlInvokableService*>"; isReadonly: true }
        Property { name: "sessionId"; type: "string"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "invoked"; type: "bool"; isReadonly: true }
        Property { name: "parseErrors"; type: "QVector<QScxmlError>"; isReadonly: true }
        Property { name: "loader"; type: "QScxmlCompiler::Loader"; isPointer: true }
        Property { name: "tableData"; type: "QScxmlTableData"; isPointer: true }
        Signal {
            name: "runningChanged"
            Parameter { name: "running"; type: "bool" }
        }
        Signal {
            name: "invokedServicesChanged"
            Parameter { name: "invokedServices"; type: "QVector<QScxmlInvokableService*>" }
        }
        Signal {
            name: "log"
            Parameter { name: "label"; type: "string" }
            Parameter { name: "msg"; type: "string" }
        }
        Signal { name: "reachedStableState" }
        Signal { name: "finished" }
        Signal {
            name: "dataModelChanged"
            Parameter { name: "model"; type: "QScxmlDataModel"; isPointer: true }
        }
        Signal {
            name: "initialValuesChanged"
            Parameter { name: "initialValues"; type: "QVariantMap" }
        }
        Signal {
            name: "initializedChanged"
            Parameter { name: "initialized"; type: "bool" }
        }
        Signal {
            name: "loaderChanged"
            Parameter { name: "loader"; type: "QScxmlCompiler::Loader"; isPointer: true }
        }
        Signal {
            name: "tableDataChanged"
            Parameter { name: "tableData"; type: "QScxmlTableData"; isPointer: true }
        }
        Method { name: "start" }
        Method { name: "stop" }
        Method { name: "init"; type: "bool" }
        Method {
            name: "stateNames"
            type: "QStringList"
            Parameter { name: "compress"; type: "bool" }
        }
        Method { name: "stateNames"; type: "QStringList" }
        Method {
            name: "activeStateNames"
            type: "QStringList"
            Parameter { name: "compress"; type: "bool" }
        }
        Method { name: "activeStateNames"; type: "QStringList" }
        Method {
            name: "isActive"
            type: "bool"
            Parameter { name: "scxmlStateName"; type: "string" }
        }
        Method {
            name: "submitEvent"
            Parameter { name: "event"; type: "QScxmlEvent"; isPointer: true }
        }
        Method {
            name: "submitEvent"
            Parameter { name: "eventName"; type: "string" }
        }
        Method {
            name: "submitEvent"
            Parameter { name: "eventName"; type: "string" }
            Parameter { name: "data"; type: "QVariant" }
        }
        Method {
            name: "cancelDelayedEvent"
            Parameter { name: "sendId"; type: "string" }
        }
        Method {
            name: "isDispatchableTarget"
            type: "bool"
            Parameter { name: "target"; type: "string" }
        }
        Property { name: "children"; revision: 508; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        name: "QScxmlStateMachineLoader"
        prototype: "QObject"
        exports: ["QtScxml/StateMachineLoader 5.8"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QUrl" }
        Property { name: "stateMachine"; type: "QScxmlStateMachine"; isReadonly: true; isPointer: true }
        Property { name: "initialValues"; type: "QVariantMap" }
        Property { name: "dataModel"; type: "QScxmlDataModel"; isPointer: true }
    }
}
