#
# qmake configuration for vxworks-ppc-dcc
#

MAKEFILE_GENERATOR      = UNIX
QMAKE_PLATFORM          = vxworks
CONFIG                 += incremental
QMAKE_INCREMENTAL_STYLE = sublib

include(../common/unix.conf)

VXWORKS_ARCH            = ppc
VXWORKS_CPU             = PPC32
VXWORKS_DIAB_SPEC       = -tPPC7400FV:vxworks66
VXWORKS_ARCH_MUNCH      = ppc

QMAKE_COMPILER          = wr_dcc

QMAKE_CC                = dcc
QMAKE_CFLAGS           += $$VXWORKS_DIAB_SPEC -Xkeywords=0x0 -Xcode-absolute-far -Xansi -Xforce-declarations -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/h/wrn/coreip -DCPU=$$upper($$VXWORKS_ARCH) -DVX_CPU_FAMILY=$$VXWORKS_ARCH -DTOOL_FAMILY=diab -DTOOL=diab -D_WRS_KERNEL -DVXWORKS -D_VSB_CONFIG_FILE=\'<../lib/h/config/vsbConfig.h>\'
QMAKE_CFLAGS_DEPS      +=
QMAKE_CFLAGS_WARN_ON   +=
QMAKE_CFLAGS_WARN_OFF  += -Xsuppress-warnings
QMAKE_CFLAGS_RELEASE   +=
QMAKE_CFLAGS_DEBUG     += -g
QMAKE_CFLAGS_SHLIB     +=
QMAKE_CFLAGS_STATIC_LIB +=
QMAKE_CFLAGS_YACC      +=
QMAKE_CFLAGS_HIDESYMS  +=
QMAKE_CFLAGS_PRECOMPILE +=
QMAKE_CFLAGS_USE_PRECOMPILE +=

QMAKE_CXX               = dcc
QMAKE_CXXFLAGS         += $$QMAKE_CFLAGS
QMAKE_CXXFLAGS_DEPS    += $$QMAKE_CFLAGS_DEPS
QMAKE_CXXFLAGS_WARN_ON += $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF += $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE += $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_DEBUG   += $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_SHLIB   += $$QMAKE_CFLAGS_SHLIB
QMAKE_CXXFLAGS_STATIC_LIB += $$QMAKE_CFLAGS_STATIC_LIB
QMAKE_CXXFLAGS_YACC    += $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_HIDESYMS += $$QMAKE_CFLAGS_HIDESYMS
QMAKE_CXXFLAGS_PRECOMPILE +=
QMAKE_CXXFLAGS_USE_PRECOMPILE = $$QMAKE_CFLAGS_USE_PRECOMPILE

QMAKE_LINK              = dld
QMAKE_LINK_SHLIB        = dld
QMAKE_LFLAGS           += $$VXWORKS_DIAB_SPEC
QMAKE_LFLAGS_RELEASE   +=
QMAKE_LFLAGS_DEBUG     +=
QMAKE_LFLAGS_APP       += -r5
QMAKE_LFLAGS_SHLIB     +=
QMAKE_LFLAGS_PLUGIN    += $$QMAKE_LFLAGS_SHLIB
QMAKE_LFLAGS_SONAME    +=
QMAKE_LFLAGS_THREAD    +=
QMAKE_LFLAGS_NOUNDEF   +=
QMAKE_LFLAGS_RPATH      =

QMAKE_PCH_OUTPUT_EXT    = .gch

# -Bsymbolic-functions (ld) support
QMAKE_LFLAGS_BSYMBOLIC_FUNC =
QMAKE_LFLAGS_DYNAMIC_LIST =

QMAKE_CFLAGS_THREAD    += -D_REENTRANT
QMAKE_CXXFLAGS_THREAD  += $$QMAKE_CFLAGS_THREAD

QMAKE_INCDIR            =
QMAKE_LIBDIR            =
QMAKE_INCDIR_X11        = $(WIND_HOME)/GSS/include
QMAKE_LIBDIR_X11        = $(WIND_HOME)/GSS/lib
QMAKE_INCDIR_OPENGL     = $$QMAKE_INCDIR_X11
QMAKE_LIBDIR_OPENGL     = $$QMAKE_LIBDIR_X11

QMAKE_LIBS              =
QMAKE_LIBS_DYNLOAD      =
QMAKE_LIBS_X11          = -lXext -lX11
QMAKE_LIBS_OPENGL       = -lGL
QMAKE_LIBS_THREAD       =
QMAKE_LIBS_NETWORK      = # -lnetwrap # only needed if kernel is missing gethostbyname and friends


QMAKE_AR                = ar cqs
QMAKE_OBJCOPY           = objcopy
QMAKE_NM                = nm -P
QMAKE_RANLIB            =

QMAKE_STRIP             = strip
QMAKE_STRIPFLAGS_LIB   += --strip-unneeded

load(qt_config)

