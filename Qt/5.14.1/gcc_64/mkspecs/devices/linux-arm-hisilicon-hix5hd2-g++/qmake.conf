#
# qmake configuration for linux-arm-hisilicon-hix5hd2-g++ using the arm-linux-gnueabihf-g++ crosscompiler
#
# A typical configure line looks like this:
# <path-to-qt-src>/configure -opensource -confirm-license  -release -make libs -make examples -optimized-qmake
# -platform linux-g++-64 -device linux-arm-hisilicon-hix5hd2-g++ -device-option CROSS_COMPILE=arm-linux-gnueabihf-
# -opengl es2 -no-qml-debug -no-directfb -no-kms -no-xcb -no-alsa -qt-zlib -qt-libjpeg -qt-libpng
# -no-icu -no-nis -sysroot <path-to-rootfs> -extprefix <path-to-targetinstall> -hostprefix <path-to-hostinstall>
# -prefix <path-to-prefix>
#
# such as
# ./configure -opensource -confirm-license  -release -make libs -make examples -optimized-qmake
# -platform linux-g++-64 -device linux-arm-hisilicon-hix5hd2-g++ -device-option CROSS_COMPILE=arm-linux-gnueabihf-
# -opengl es2 -no-qml-debug -no-directfb -no-kms -no-xcb -no-alsa -qt-zlib -qt-libjpeg -qt-libpng
# -no-icu -no-nis -sysroot /home/abc/project/sysbase
# -extprefix /home/abc/project/sysbase/qt_install
# -hostprefix /home/abc/project/qtdir/qtbase_hostinstall
# -prefix /home/abc/project/sysbase/qt_install

include(../common/linux_device_pre.conf)

QMAKE_INCDIR_POST += /usr/arm-linux-gnueabihf/include
QMAKE_LIBDIR_POST += /usr/arm-linux-gnueabihf/lib

QMAKE_LIBS += -lrt

QMAKE_INCDIR_EGL += $$[QT_SYSROOT]/egl/include
QMAKE_LIBDIR_EGL += $$[QT_SYSROOT]/egl/lib
QMAKE_INCDIR_OPENGL_ES2 += $$QMAKE_INCDIR_EGL
QMAKE_LIBDIR_OPENGL_ES2 += $$QMAKE_LIBDIR_EGL

QMAKE_LIBS_EGL += -lMali
QMAKE_LIBS_OPENGL_ES2 += $$QMAKE_LIBS_EGL
QMAKE_LIBS_OPENVG     += $$QMAKE_LIBS_EGL

DISTRO_OPTS += hard-float

QMAKE_CFLAGS   +=-march=armv7-a -mcpu=cortex-a9  -mfpu=vfpv3-d16
QMAKE_CXXFLAGS += $$QMAKE_CFLAGS

# Preferred eglfs backend
EGLFS_DEVICE_INTEGRATION = eglfs_mali

include(../common/linux_arm_device_post.conf)

load(qt_config)
