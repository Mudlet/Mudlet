/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -v org.neard.Tag.xml -p tag_p -v
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef TAG_P_H_1410941369
#define TAG_P_H_1410941369

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.neard.Tag
 */
class OrgNeardTagInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.neard.Tag"; }

public:
    OrgNeardTagInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgNeardTagInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QByteArray> GetRawNDEF()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("GetRawNDEF"), argumentList);
    }

    inline QDBusPendingReply<> Write(const QVariantMap &attributes)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(attributes);
        return asyncCallWithArgumentList(QStringLiteral("Write"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace neard {
    typedef ::OrgNeardTagInterface Tag;
  }
}
#endif
