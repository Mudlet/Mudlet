name: Link Linux/macOS PTBs to the updater (dblsqd)

on:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: '0 2 * * *'

jobs:
  link-ptbs:
    runs-on: ubuntu-20.04
    if: ${{ github.repository_owner == 'Mudlet' }}

    steps:
    - uses: actions/checkout@v2
    - uses: leafo/gh-actions-lua@v8
      with:
        luaVersion: "5.1.5"
    - uses: actions/setup-node@v2.1.4
    - uses: leafo/gh-actions-luarocks@v4

    - name: install Lua dependencies
      run: |
        luarocks install http
        luarocks install lunajson

    - name: Retrieve latest PTB version
      run: |
        export PTB_VERSION=$(curl --silent https://feeds.dblsqd.com/MKMMR7HNSP65PquQQbiDIw/public-test-build/linux/x86_64 | jq ".releases[0].version")
        export PTB_COMMIT=$(lua -e "print(os.getenv('PTB_VERSION'):match('.+\-(.+)\"$'))")

        echo "Latest PTB version is: $PTB_VERSION"
        echo "Latest PTB commit is: $PTB_COMMIT"

        {
          echo "PTB_VERSION=$PTB_VERSION"
          echo "PTB_COMMIT=$PTB_COMMIT"
        } >> "$GITHUB_ENV"

    - name: Retrieve binaries available on make.mudlet.org
      run: |
        LATEST_FEED=$(tempfile) || exit 1
        curl --silent --output $LATEST_FEED "https://make.mudlet.org/snapshots/json.php?commitid=$PTB_COMMIT"

        # if [ "$(cat $LATEST_FEED | jq \".status\")" != "ok"]; then
        #   echo "Downloaded feed from https://make.mudlet.org/snapshots/json.php?commitid=$PTB_COMMIT wasn't OK"
        # fi

        export LINUX_PTB_URL=$(cat $LATEST_FEED | jq ".data[] | select(.platform == \"linux\") | .url")
        export MACOS_PTB_URL=$(cat $LATEST_FEED | jq ".data[] | select(.platform == \"macos\") | .url")

        echo "Linux PTB link: $LINUX_PTB_URL"
        echo "macOS PTB link: $MACOS_PTB_URL"

        {
          echo "LINUX_PTB_URL=$LINUX_PTB_URL"
          echo "MACOS_PTB_URL=$MACOS_PTB_URL"
        } >> "$GITHUB_ENV"

    - name: Install dblsqd client
      run: sudo npm install -g dblsqd-cli
