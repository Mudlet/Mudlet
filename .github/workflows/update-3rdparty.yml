name: Update 3rdparty sources
on:
  repository_dispatch:
    types: update-3rdparty

  schedule:
    - cron: '0 0 * * fri'

jobs:
  update-iremapper-source:
    runs-on: ubuntu-latest
    if: github.repository == 'Mudlet/Mudlet'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: development

      - name: Download latest IRE mapper
        uses: carlosperate/download-file-action@v1.0.0
        with:
          file-url: https://raw.githubusercontent.com/IRE-Mudlet-Mapping/ire-mapping-script/gh-pages/downloads/mudlet-mapper.xml
          file-name: mudlet-mapper.xml
          location: src/

      # strictly speaking this step isn't necessary since the PR action can filter as well, but it's easier
      # to see in github UI's if PR creation was skipped when we have an explicit pre-check
      - name: check if we have any updates
        id: getdiff
        run: |
          lines_changed=$(git diff --patch --unified=0 src/mudlet-mapper.xml | wc --lines)
          echo "$lines_changed lines changed."
          echo ::set-output name=lines_changed::$lines_changed

      - name: send in a pull request
        uses: gr2m/create-or-update-pull-request-action@v1.x
        if: steps.getdiff.outputs.lines_changed > 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "Update bundled IRE mapper script to latest upstream"
          body: |
            #### Brief overview of PR changes/additions
            :crown: An automated PR to update the IRE mapper script to the latest version.
            #### Motivation for adding to Mudlet
            So people don't get attacked with a "your mapping script is out of date!" notification as soon as they create a profile for a new IRE game.
            #### Other info (issues closed, discussion etc)
            _update triggered by ${{ github.ref }} ${{ github.sha }}_
          branch: update-ire-mapping-script-${{ github.sha }}
          path: src/
          commit-message: (autocommit) Updated IRE mapping script to latest upstream
          author: "mudlet-machine-account <mudlet-machine-account@users.noreply.github.com>"

  update-edbee-fork:
    runs-on: ubuntu-latest
    if: github.repository == 'Mudlet/Mudlet'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: development
          submodules: true
          fetch-depth: 0

      - name: update submodule to latest
        run: git submodule update --remote 3rdparty/edbee-lib/

      # strictly speaking this step isn't necessary since the PR action can filter as well, but it's easier
      # to see in github UI's if PR creation was skipped when we have an explicit pre-check
      - name: check if we have any updates
        id: getdiff
        run: |
          lines_changed=$(git diff --patch --unified=0 3rdparty/edbee-lib/ | wc --lines)
          echo "$lines_changed lines changed."
          echo ::set-output name=lines_changed::$lines_changed

      - name: send in a pull request
        uses: gr2m/create-or-update-pull-request-action@v1.x
        if: steps.getdiff.outputs.lines_changed > 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "Update edbee to latest in our fork"
          body: |
            #### Brief overview of PR changes/additions
            :crown: An automated PR to update edbee to its latest version in our fork.
            #### Motivation for adding to Mudlet
            Get new features, bugfixes, improvements! Stay modern.
            #### Other info (issues closed, discussion etc)
            _update triggered by ${{ github.ref }} ${{ github.sha }}_
          branch: update-edbee-lib-${{ github.sha }}
          path: 3rdparty/edbee-lib
          commit-message: (autocommit) Updated edbee-lib submodule to latest in our fork
          author: "mudlet-machine-account <mudlet-machine-account@users.noreply.github.com>"

  update-sparkle-glue-fork:
    runs-on: ubuntu-latest
    if: github.repository == 'Mudlet/Mudlet'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: development
          submodules: true
          fetch-depth: 0

      - name: update submodule to latest
        run: git submodule update --remote 3rdparty/sparkle-glue/

      # strictly speaking this step isn't necessary since the PR action can filter as well, but it's easier
      # to see in github UI's if PR creation was skipped when we have an explicit pre-check
      - name: check if we have any updates
        id: getdiff
        run: |
          lines_changed=$(git diff --patch --unified=0 3rdparty/sparkle-glue | wc --lines)
          echo "$lines_changed lines changed."
          echo ::set-output name=lines_changed::$lines_changed

      - name: send in a pull request
        uses: gr2m/create-or-update-pull-request-action@v1.x
        if: steps.getdiff.outputs.lines_changed > 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "Update sparkle-glue to latest in our fork"
          body: |
            #### Brief overview of PR changes/additions
            :crown: An automated PR to update sparkle-glue to its latest in our fork.
            #### Motivation for adding to Mudlet
            Get new features, bugfixes, improvements! Stay modern.
            #### Other info (issues closed, discussion etc)
            _update triggered by ${{ github.ref }} ${{ github.sha }}_
          branch: update-sparkle-glue-${{ github.sha }}
          path: 3rdparty/sparkle-glue
          commit-message: (autocommit) Updated sparkle-glue submodule to latest in our fork
          author: "mudlet-machine-account <mudlet-machine-account@users.noreply.github.com>"

  update-dblsqd-fork:
    runs-on: ubuntu-latest
    if: github.repository == 'Mudlet/Mudlet'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: development
          submodules: true
          fetch-depth: 0

      - name: update submodule to latest
        run: git submodule update --remote 3rdparty/dblsqd/

      # strictly speaking this step isn't necessary since the PR action can filter as well, but it's easier
      # to see in github UI's if PR creation was skipped when we have an explicit pre-check
      - name: check if we have any updates
        id: getdiff
        run: |
          lines_changed=$(git diff --patch --unified=0 3rdparty/dblsqd/ | wc --lines)
          echo "$lines_changed lines changed."
          echo ::set-output name=lines_changed::$lines_changed

      - name: send in a pull request
        uses: gr2m/create-or-update-pull-request-action@v1.x
        if: steps.getdiff.outputs.lines_changed > 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "Update dblsqd to latest in our fork"
          body: |
            #### Brief overview of PR changes/additions
            :crown: An automated PR to update dblsqd to its latest version in our fork.
            #### Motivation for adding to Mudlet
            Get new features, bugfixes, improvements! Stay modern.
            #### Other info (issues closed, discussion etc)
            _update triggered by ${{ github.ref }} ${{ github.sha }}_
          branch: update-dblsqd-${{ github.sha }}
          path: 3rdparty/dblsqd
          commit-message: (autocommit) Updated dblsqd submodule to latest in our fork
          author: "mudlet-machine-account <mudlet-machine-account@users.noreply.github.com>"

  update-qtkeychain-fork:
    runs-on: ubuntu-latest
    if: github.repository == 'Mudlet/Mudlet'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: development
          submodules: true
          fetch-depth: 0

      - name: update submodule to latest
        run: git submodule update --remote 3rdparty/qtkeychain/

      # strictly speaking this step isn't necessary since the PR action can filter as well, but it's easier
      # to see in github UI's if PR creation was skipped when we have an explicit pre-check
      - name: check if we have any updates
        id: getdiff
        run: |
          lines_changed=$(git diff --patch --unified=0 3rdparty/qtkeychain/ | wc --lines)
          echo "$lines_changed lines changed."
          echo ::set-output name=lines_changed::$lines_changed

      - name: send in a pull request
        uses: gr2m/create-or-update-pull-request-action@v1.x
        if: steps.getdiff.outputs.lines_changed > 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "Update qtkeychain to latest in our fork"
          body: |
            #### Brief overview of PR changes/additions
            :crown: An automated PR to update qtkeychain to its latest version in our fork.
            #### Motivation for adding to Mudlet
            Get new features, bugfixes, improvements! Stay modern.
            #### Other info (issues closed, discussion etc)
            _update triggered by ${{ github.ref }} ${{ github.sha }}_
          branch: update-qtkeychain-${{ github.sha }}
          path: 3rdparty/qtkeychain
          commit-message: (autocommit) Updated qtkeychain submodule to latest in our fork
          author: "mudlet-machine-account <mudlet-machine-account@users.noreply.github.com>"

  update-lcf-source-51:
    runs-on: ubuntu-latest
    if: github.repository == 'Mudlet/Mudlet'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: development
          submodules: true
          fetch-depth: 0

      - name: update submodule to latest in 5.1 branch
        run: |
          cd 3rdparty/lcf/
          git checkout 5.1
          git pull

      # strictly speaking this step isn't necessary since the PR action can filter as well, but it's easier
      # to see in github UI's if PR creation was skipped when we have an explicit pre-check
      - name: check if we have any updates
        id: getdiff
        run: |
          lines_changed=$(git diff --patch --unified=0 3rdparty/lcf/ | wc --lines)
          echo "$lines_changed lines changed."
          echo ::set-output name=lines_changed::$lines_changed

      - name: send in a pull request
        uses: gr2m/create-or-update-pull-request-action@v1.x
        if: steps.getdiff.outputs.lines_changed > 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "Update Lua code formatter to latest upstream 5.1 branch"
          body: |
            #### Brief overview of PR changes/additions
            :crown: An automated PR to update the built-in Lua code formatter to its latest version in upstream `5.1` branch.
            #### Motivation for adding to Mudlet
            Get new features, bugfixes, improvements! Stay modern.
            #### Other info (issues closed, discussion etc)
            _update triggered by ${{ github.ref }} ${{ github.sha }}_
          branch: update-lcf-${{ github.sha }}
          path: 3rdparty/lcf
          commit-message: (autocommit) Updated lcf submodule to latest upstream 5.1 branch
          author: "mudlet-machine-account <mudlet-machine-account@users.noreply.github.com>"

  update-whidecharwidth-source:
    runs-on: ubuntu-latest
    if: github.repository == 'Mudlet/Mudlet'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: development

      - name: download latest from source repo
        run: |
          curl -o src/widechar_width.h https://raw.githubusercontent.com/ridiculousfish/widecharwidth/master/widechar_width.h

      # strictly speaking this step isn't necessary since the PR action can filter as well, but it's easier
      # to see in github UI's if PR creation was skipped when we have an explicit pre-check
      - name: check if we have any updates
        id: getdiff
        run: |
          lines_changed=$(git diff --patch --unified=0 src/widechar_width.h | wc --lines)
          echo "$lines_changed lines changed."
          echo ::set-output name=lines_changed::$lines_changed

      - name: send in a pull request
        uses: gr2m/create-or-update-pull-request-action@v1.x
        if: steps.getdiff.outputs.lines_changed > 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "Update widechar_width.h to latest upstream"
          body: |
            #### Brief overview of PR changes/additions
            :crown: An automated PR to update the built-in `src/widechar_width.h` to its latest version in upstream. We don't include it as a submodule as it's just one file.
            #### Motivation for adding to Mudlet
            Better emoji and symbol support! This file helps us tell if a particular character is 0, 1, or 2 widths wide so we can show it correctly in the display.
            #### Other info (issues closed, discussion etc)
            _update triggered by ${{ github.ref }} ${{ github.sha }}_
          branch: update-lcf-${{ github.sha }}
          path: src/
          commit-message: (autocommit) Update widechar_width.h to latest upstream
          author: "mudlet-machine-account <mudlet-machine-account@users.noreply.github.com>"
