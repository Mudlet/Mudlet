language: cpp
os:
  - osx
  - linux
dist: trusty
sudo: false
addons:
  apt:
    sources:
    - sourceline: 'ppa:beineri/opt-qt562-trusty'
    - sourceline: 'ppa:beineri/opt-qt593-trusty'
    - sourceline: 'ppa:ubuntu-toolchain-r/test'
    - sourceline: 'ppa:jonathonf/php7'
    packages:
    - qt56base
    - qt56multimedia
    - qt56tools
    - qt59base
    - qt59multimedia
    - qt59tools
    - qt59gamepad
    - libhunspell-dev
    - lua5.1
    - liblua5.1-0-dev
    - libboost-graph1.55-dev
    - zlib1g-dbg
    - libzip-dev
    - libpulse-dev
    - libyajl-dev
    - gcc-5 g++-5
    - luarocks
    - lua-rex-pcre
    - lua-filesystem
    - lua-zip
    - lua-sql-sqlite3
compiler:
  - gcc
  - clang
env:
  matrix:
  - Q_OR_C_MAKE=cmake
    QT_VERSION=59 # actually Qt 5.9
  - Q_OR_C_MAKE=qmake
    QT_VERSION=59 # actually Qt 5.9
#  - Q_OR_C_MAKE=cmake
#    QT_VERSION=59
#    WITH_FONTS=NO # actually Qt 5.9, non-default without fonts
#  - Q_OR_C_MAKE=qmake
#    QT_VERSION=59
#    WITH_FONTS=NO # actually Qt 5.9, non-default without fonts
#  - Q_OR_C_MAKE=cmake
#    QT_VERSION=59
#    WITH_UPDATER=NO # actually Qt 5.9, non-default without updater
#  - Q_OR_C_MAKE=qmake
#    QT_VERSION=59
#    WITH_UPDATER=NO # actually Qt 5.9, non-default without updater
  global:
  - secure: VFI3UCiDrp47WTcUhsatdQvvWg+3gk00eBMZgSOXXKY5+hk+NOX7bOFcIM5t9nlZDbpHDr10SFTuUOw+PeWmLpFO06Zrjg86M9jm9WS4i8Cs9hfxoT6H4isXlR1vubX2LmNlHyzg8WtdNanlsufgecyaGksJxr7tVhG/cWyD6yo=
  - secure: XxdhHVraWpXpWo4tluD7NwJtqQT1b6LKoxX6QWKzR0fvcKgqBy2jlXMu0KVtTYtVI7M1wFdjtwSixK1UGFZyDgEYYUnDTufq7E81TWJSQ5ZhxNRaDAyO2vkLNFpH7LkwVrV/fWCPKE9t3/WiowwQnXesm9MMxAzbd2mIaeyiccY=
git:
  submodules: false
  # We selectively pull in the wanted submodules ourselves now
matrix:
  exclude:
  - os: osx
    compiler: gcc
  include:
  - os: linux
    compiler: gcc
    env: 
    - Q_OR_C_MAKE=cmake
    - QT_VERSION=56 # actually Qt 5.6, used to check minimum supported Qt works
before_install:
  # add to the path here to pick up things as soon as its installed
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then export PATH="${HOME}/latest-gcc-symlinks:$PATH"; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then source "/opt/qt${QT_VERSION}/bin/qt${QT_VERSION}-env.sh"; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then `luarocks path`; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then PATH="/usr/local/opt/qt5/bin:$PATH"; fi
  - ./CI/travis.before_install.sh
install: ./CI/travis.install.sh
before_script:
  # source the set-build-info as it exports some variables for us!
  - source CI/travis.set-build-info.sh
  - mkdir build
  - cd src
script:
  - cd ../build
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then export LDFLAGS=" -L/usr/local/opt/qt5/lib ${LDFLAGS}"; export CPPFLAGS=" -I/usr/local/opt/qt5/include ${CPPFLAGS}"; fi
  - if [ "${CC}" = "clang" ] && [ "${TRAVIS_OS_NAME}" = "linux" ] && [ "${Q_OR_C_MAKE}" = "qmake" ] ; then SPEC="-spec linux-clang"; fi
  - if [ "${Q_OR_C_MAKE}" = "qmake" ]; then qmake -v; qmake ${SPEC} ../src/mudlet.pro && make -j2; else cmake --version; cmake .. && make -j2 && make check; fi
after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - bash CI/travis.after_success.sh
notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/4ed233d9013d611a1568
    on_success: always  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: false     # default: false
