language: cpp
os:
  - osx
  - linux
dist: trusty
sudo: false
addons:
  apt: &apt-addon
    sources:
    - sourceline: 'ppa:beineri/opt-qt562-trusty'
    - sourceline: 'ppa:beineri/opt-qt593-trusty'
    - sourceline: 'ppa:ubuntu-toolchain-r/test'
    - sourceline: 'ppa:jonathonf/php7'
    packages:
    - qt56base
    - qt56multimedia
    - qt56tools
    - qt59base
    - qt59multimedia
    - qt59tools
    - qt59gamepad
    - libhunspell-dev
    - lua5.1
    - liblua5.1-0-dev
    - libboost-graph1.55-dev
    - zlib1g-dbg
    - libzip-dev
    - libpulse-dev
    - libyajl-dev
    - gcc-5 g++-5
    - luarocks
    - lua-rex-pcre
    - lua-filesystem
    - lua-zip
    - lua-sql-sqlite3
compiler: clang
env:
  matrix:
  - Q_OR_C_MAKE=cmake
    QT_VERSION=59 # actually Qt 5.9
  - Q_OR_C_MAKE=qmake
    QT_VERSION=59 # actually Qt 5.9
#  - Q_OR_C_MAKE=cmake
#    QT_VERSION=59
#    WITH_FONTS=NO # actually Qt 5.9, non-default without fonts
#  - Q_OR_C_MAKE=qmake
#    QT_VERSION=59
#    WITH_FONTS=NO # actually Qt 5.9, non-default without fonts
#  - Q_OR_C_MAKE=cmake
#    QT_VERSION=59
#    WITH_UPDATER=NO # actually Qt 5.9, non-default without updater
#  - Q_OR_C_MAKE=qmake
#    QT_VERSION=59
#    WITH_UPDATER=NO # actually Qt 5.9, non-default without updater
  global:
  - secure: VFI3UCiDrp47WTcUhsatdQvvWg+3gk00eBMZgSOXXKY5+hk+NOX7bOFcIM5t9nlZDbpHDr10SFTuUOw+PeWmLpFO06Zrjg86M9jm9WS4i8Cs9hfxoT6H4isXlR1vubX2LmNlHyzg8WtdNanlsufgecyaGksJxr7tVhG/cWyD6yo=
  - secure: XxdhHVraWpXpWo4tluD7NwJtqQT1b6LKoxX6QWKzR0fvcKgqBy2jlXMu0KVtTYtVI7M1wFdjtwSixK1UGFZyDgEYYUnDTufq7E81TWJSQ5ZhxNRaDAyO2vkLNFpH7LkwVrV/fWCPKE9t3/WiowwQnXesm9MMxAzbd2mIaeyiccY=
  - secure: "VdLyaUZJC6T0Jyb4gYb3aOJavQ2u5u8x0810szzyhAd2mNht3Bg0imeAlQAV7l4XIZ5XmJIU2VWJQm3wsPccQc8ppc/aJV9XzOBlVSqCLgMMsO7+I1/tEKHa6r4qs1gWruS4wf2pPSRSAcLZZuee/JqqnBeqq2qcwU+vwVSyLp2l1j3ZR+lDN/gbHeYZYrQDXwMIqOQIBXmRhHTNWX+8g+NoFsGgUvp9IpivYzvpseAmcp3kb8+gKfgwhB82/2r4vGnx13Ju3wk3xRwgry6leLDTnRDMIppCEDpcNYcknZUFMu3YgEF8uhw0It+33xuWHdsy0LGSkl3ljxrQQH38Yl4/zYNyjow4Co88UW8x2awd+fV6UAAaA0h/lRFoZMPo9aMyni+SzVtHfXB7wK6vhtBwtsTj7+84r6tCSBeaGl0ccmZSfw31KGAdG0g2Ol1oZ2PE7UYXoxFiMNc/0cgr3FfrprGxKv856qJ+iYJPfYmNU5/uPj9DM6tO6zLNw+FNS56K2vC9tREetMncr62uwqYE4zAx+y1cevqoQAhn3vQS7/sXUNrKTCJd9Gh4IZJuWaDgOVLY78CQcp9nFryWQ8i3pHhltcPo/wCDgZ+hYoXyx5vR2QziLGtCoxgOwOzi1UBxqoefsME7rnSQHzT1aqP5x5rnL0F19q9hYeMUVtg="
git:
  submodules: false # We selectively pull in the wanted submodules ourselves now
matrix:
  include:
  - os: linux
    compiler: gcc
    env: 
    - Q_OR_C_MAKE=cmake
    - QT_VERSION=56 # actually Qt 5.6, used to check minimum supported Qt works
  - os: linux
    compiler: gcc
    env: 
    - Q_OR_C_MAKE=cmake
    - QT_VERSION=59 # actually Qt 5.9
  - os: linux
    compiler: gcc
    env:
    - Q_OR_C_MAKE=qmake
    - QT_VERSION=59
    addons:
      apt: *apt-addon
      coverity_scan:
        project:
          name: "Mudlet/Mudlet"
          description: "<Your project description here>"
        notification_email: vperetokin@gmail.com
        build_command_prepend: |
          # source the set-build-info as it exports some variables for us!
          source CI/travis.set-build-info.sh
          mkdir build
        build_command: ./CI/travis.compile.sh
        branch_pattern: AddCoverityScans
before_install:
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-; fi
  # add to the path here to pick up things as soon as its installed
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then export PATH="${HOME}/latest-gcc-symlinks:$PATH"; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then source "/opt/qt${QT_VERSION}/bin/qt${QT_VERSION}-env.sh"; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then $(luarocks path); fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then PATH="/usr/local/opt/qt5/bin:$PATH"; fi
  - ./CI/travis.before_install.sh
install: ./CI/travis.install.sh
before_script: |
  # source the set-build-info as it exports some variables for us!
  source CI/travis.set-build-info.sh
  mkdir build
script: ./CI/travis.compile.sh
after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - bash CI/travis.after_success.sh
notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/4ed233d9013d611a1568
    on_success: always  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: false     # default: false
